EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Search for the minimum character.exe -- emu8086 assembler version: 4.08  
 
[ 2020/1/20  --  19:22:26 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       DIM         EQU     20
[   2]        :                                       
[   3]        :                                       .MODEL      small
[   4]        :                                       
[   5]        :                                       .STACK
[   6]        :                                       
[   7]        :                                       .DATA
[   8]    0100: 00                                    TAB     DB   DUP(0)
[   9]        :                                       
[  10]        :                                       .CODE
[  11]        :                                       
[  12]    0110: BA 10 00 8E DA                        .STARTUP
[  13]    0115: B9 14 00                              MOV     CX, DIM
[  14]    0118: BF 00 00                              LEA     DI, TAB
[  15]    011B: B4 01                                 MOV     AH, 1           ; reading
[  16]        :                                       
[  17]    011D: CD 21                                 lab1:   INT     21H
[  18]    011F: 88 05                                 MOV     [DI], AL
[  19]    0121: 47                                    INC     DI
[  20]    0122: 49                                    DEC     CX
[  21]    0123: 83 F9 00                              CMP     CX, 0
[  22]    0126: 75 F5                                 JNE     lab1
[  23]    0128: B1 FF                                 MOV     CL, 0FFH        ; Set the max Number for CMP
[  24]    012A: BF 00 00                              MOV     DI, 0
[  25]        :                                       
[  26]    012D: 3A 0D                                 ciclo:  CMP     CL, TAB[DI]
[  27]    012F: 72 02                                 JB      dopo            ; Unsigned compare
[  28]    0131: 8A 0D                                 MOV     CL, TAB[DI]
[  29]        :                                       
[  30]    0133: 47                                    dopo:   INC     DI
[  31]    0134: 83 FF 14                              CMP     DI, DIM
[  32]    0137: 72 F4                                 JB      ciclo
[  33]        :                                       
[  34]    0139: 8A D1                                 output: MOV     DL, CL
[  35]    013B: B4 02                                 MOV     AH, 2           ;Interrupt for displaying
[  36]    013D: CD 21                                 INT     21H
[  37]        :                                       
[  38]    013F: B8 00 4C CD 21                        .EXIT
[  39]        :                                       
[  40]        :                                       END
[  41]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 44      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: ED      -   check sum (l.byte)
0013: 33      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 11      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 11      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
