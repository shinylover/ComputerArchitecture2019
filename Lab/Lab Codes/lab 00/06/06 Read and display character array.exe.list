EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
06 Read and display character array.exe -- emu8086 assembler version: 4.08  
 
[ 2020/1/20  --  17:54:30 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       DIM     EQU     20
[   2]        :                                       
[   3]        :                                       .MODEL      small
[   4]        :                                       
[   5]        :                                       .STACK
[   6]        :                                       
[   7]        :                                       .DATA
[   8]    0100: 00 00 00 00 00 00 00 00 00 00 00 00   VETT    DB      DIM     DUP(0)
                00 00 00 00 00 00 00 00             
[   9]        :                                       
[  10]        :                                       .CODE
[  11]        :                                       
[  12]    0120: BA 10 00 8E DA                        .STARTUP
[  13]    0125: B9 14 00                              MOV CX, DIM
[  14]    0128: BF 00 00                              MOV DI, 0
[  15]    012B: B4 01                                 MOV AH, 1       ; SET HA FOR READING
[  16]        :                                       
[  17]    012D: CD 21                                 lab1:   INT 21H         ; read a character from keyboard
[  18]    012F: 88 05                                 MOV VETT[DI], AL
[  19]    0131: 47                                    INC DI          ; Because of DB, plus 1
[  20]    0132: 49                                    DEC CX
[  21]    0133: 83 F9 00                              CMP CX, 0
[  22]    0136: 75 F5                                 JNZ lab1
[  23]    0138: B9 14 00                              MOV CX, DIM     ; Reset the CX for display
[  24]    013B: B4 02                                 MOV AH, 2       ; Set for writing
[  25]        :                                       
[  26]    013D: 4F                                    lab2:   DEC DI
[  27]    013E: 8A 15                                 MOV DL, VETT[DI]; DX is general Register and AX is occupied
[  28]    0140: CD 21                                 INT 21H         ; Interrupt to display the character
[  29]    0142: 49                                    DEC CX
[  30]    0143: 83 F9 00                              CMP CX, 0
[  31]    0146: 75 F5                                 JNZ lab2
[  32]        :                                       
[  33]    0148: B8 00 4C CD 21                        .EXIT
[  34]        :                                       
[  35]        :                                       END
[  36]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 4D      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: CC      -   check sum (l.byte)
0013: BE      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 12      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 12      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
